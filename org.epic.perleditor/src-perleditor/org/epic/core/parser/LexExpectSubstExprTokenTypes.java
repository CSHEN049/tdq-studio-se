// $ANTLR : "expectSubstExpr.g" -> "LexExpectSubstExpr.java"$

// This source file was generated by ANTLR. Do not edit manually!
package org.epic.core.parser;

public interface LexExpectSubstExprTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int CLOSE_HEREDOC = 4;
	int HEREDOC_LINE = 5;
	int HEREDOC_LINE_CHARS = 6;
	int NEWLINE = 7;
	int NOTNEWLINE = 8;
	int STRING_SUFFIX = 9;
	int STRING_BODY = 10;
	int CLOSE_QUOTE = 11;
	int NOT_QUOTE = 12;
	int OPEN_PAREN = 13;
	int OPEN_CURLY = 14;
	int OPEN_BRACKET = 15;
	int OPEN_BRACE = 16;
	int CLOSE_PAREN = 17;
	int CLOSE_CURLY = 18;
	int CLOSE_BRACKET = 19;
	int CLOSE_BRACE = 20;
	int ESCAPE = 21;
	int OPEN_QUOTE = 22;
	int COMMENT = 23;
	int WS = 24;
	int OPEN_QUOTE1 = 25;
	int OPEN_QUOTE2 = 26;
	int OPEN_POD = 27;
	int POD_BODY = 28;
	int CLOSE_POD = 29;
	int SEMI = 30;
	int OPEN_BQUOTE = 31;
	int OPEN_SQUOTE = 32;
	int OPEN_DQUOTE = 33;
	int OPER_AND = 45;
	int OPER_OR = 46;
	int OPER_MULMUL = 47;
	int PROTO = 48;
	int OPER_S = 49;
	int OPEN_SLASH = 50;
	int SUBST_OR_MATCH_OR_WORD = 51;
	int SUBST_EXPR = 52;
	int MATCH_EXPR = 53;
	int OPER_DARROW = 54;
	int OPER_ARROW = 55;
	int OPER_DOUBLEEQ = 56;
	int OPER_EQMATCH = 57;
	int OPER_EQNOTMATCH = 58;
	int OPER_MINUSMINUS = 59;
	int OPER_PLUSPLUS = 60;
	int OPER_COMMA = 61;
	int OPER_EQ = 62;
	int OPER_MUL = 63;
	int OPER_DIV = 64;
	int OPER_PLUS = 65;
	int OPER_MINUS = 66;
	int FORMAT_STMT = 67;
	int END_STMT = 68;
	int DATA_STMT = 69;
	int SPECIAL_VAR = 70;
	int VAR_WITH_CURLY = 71;
	int REF = 72;
	int VAR = 73;
	int PROC_REF = 74;
	int OPER_LSHIFT_OR_HEREDOC = 75;
	int OPER_LSHIFT = 76;
	int OPEN_HEREDOC = 77;
	int GLOB = 78;
	int NUMBER = 79;
	int WORD = 80;
	int WORD_CHAR = 81;
	int OTHER = 82;
	int CURLY = 83;
	int OPER_RSHIFT = 84;
	int VAR_START = 85;
	int KEYWORD1 = 86;
	int KEYWORD2 = 87;
	int KEYWORD_USE = 88;
	int KEYWORD_SUB = 89;
	int KEYWORD_FORMAT = 90;
	int NOT_NEWLINE = 91;
	int OPEN_QMARK = 92;
	int OPER_QMARK = 93;
	int OPER_COLON = 94;
	int OPER_DOT = 95;
	int OPER_LT = 96;
	int OPER_GT = 97;
	int OPER_LTEQ = 99;
	int OPER_GTEQ = 100;
	int MAYBE_SPECIAL_VAR = 101;
	int KEYWORD_PACKAGE = 102;
	int OPER_BSLASH = 103;
	int OPER_OTHER = 104;
	int OPER_DOTDOT = 105;
	int OPER_MOD = 106;
	int OPER_MODEQ = 107;
	int OPER_MULEQ = 108;
	int OPER_PLUSEQ = 109;
	int OPER_MINUSEQ = 110;
	int OPER_NOTEQ = 111;
}
