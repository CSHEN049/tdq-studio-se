/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package orgomg.cwmx.resource.coboldata.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import orgomg.cwmx.resource.coboldata.util.CoboldataAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CoboldataItemProviderAdapterFactory extends CoboldataAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public CoboldataItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.COBOLFD} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected COBOLFDItemProvider cobolfdItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.COBOLFD}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCOBOLFDAdapter() {
        if (cobolfdItemProvider == null) {
            cobolfdItemProvider = new COBOLFDItemProvider(this);
        }

        return cobolfdItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.COBOLField} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected COBOLFieldItemProvider cobolFieldItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.COBOLField}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCOBOLFieldAdapter() {
        if (cobolFieldItemProvider == null) {
            cobolFieldItemProvider = new COBOLFieldItemProvider(this);
        }

        return cobolFieldItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.Renames} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RenamesItemProvider renamesItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.Renames}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRenamesAdapter() {
        if (renamesItemProvider == null) {
            renamesItemProvider = new RenamesItemProvider(this);
        }

        return renamesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.Section} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SectionItemProvider sectionItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.Section}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSectionAdapter() {
        if (sectionItemProvider == null) {
            sectionItemProvider = new SectionItemProvider(this);
        }

        return sectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.WorkingStorageSection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WorkingStorageSectionItemProvider workingStorageSectionItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.WorkingStorageSection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWorkingStorageSectionAdapter() {
        if (workingStorageSectionItemProvider == null) {
            workingStorageSectionItemProvider = new WorkingStorageSectionItemProvider(this);
        }

        return workingStorageSectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.FileSection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FileSectionItemProvider fileSectionItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.FileSection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFileSectionAdapter() {
        if (fileSectionItemProvider == null) {
            fileSectionItemProvider = new FileSectionItemProvider(this);
        }

        return fileSectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.ReportWriterSection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReportWriterSectionItemProvider reportWriterSectionItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.ReportWriterSection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReportWriterSectionAdapter() {
        if (reportWriterSectionItemProvider == null) {
            reportWriterSectionItemProvider = new ReportWriterSectionItemProvider(this);
        }

        return reportWriterSectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.LinkageSection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LinkageSectionItemProvider linkageSectionItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.LinkageSection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLinkageSectionAdapter() {
        if (linkageSectionItemProvider == null) {
            linkageSectionItemProvider = new LinkageSectionItemProvider(this);
        }

        return linkageSectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.OccursKey} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OccursKeyItemProvider occursKeyItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.OccursKey}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOccursKeyAdapter() {
        if (occursKeyItemProvider == null) {
            occursKeyItemProvider = new OccursKeyItemProvider(this);
        }

        return occursKeyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.LinageInfo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LinageInfoItemProvider linageInfoItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.LinageInfo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLinageInfoAdapter() {
        if (linageInfoItemProvider == null) {
            linageInfoItemProvider = new LinageInfoItemProvider(this);
        }

        return linageInfoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.COBOLFDIndex} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected COBOLFDIndexItemProvider cobolfdIndexItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.COBOLFDIndex}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCOBOLFDIndexAdapter() {
        if (cobolfdIndexItemProvider == null) {
            cobolfdIndexItemProvider = new COBOLFDIndexItemProvider(this);
        }

        return cobolfdIndexItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link orgomg.cwmx.resource.coboldata.Usage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected UsageItemProvider usageItemProvider;

    /**
     * This creates an adapter for a {@link orgomg.cwmx.resource.coboldata.Usage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createUsageAdapter() {
        if (usageItemProvider == null) {
            usageItemProvider = new UsageItemProvider(this);
        }

        return usageItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (cobolfdItemProvider != null) cobolfdItemProvider.dispose();
        if (cobolFieldItemProvider != null) cobolFieldItemProvider.dispose();
        if (renamesItemProvider != null) renamesItemProvider.dispose();
        if (sectionItemProvider != null) sectionItemProvider.dispose();
        if (workingStorageSectionItemProvider != null) workingStorageSectionItemProvider.dispose();
        if (fileSectionItemProvider != null) fileSectionItemProvider.dispose();
        if (reportWriterSectionItemProvider != null) reportWriterSectionItemProvider.dispose();
        if (linkageSectionItemProvider != null) linkageSectionItemProvider.dispose();
        if (occursKeyItemProvider != null) occursKeyItemProvider.dispose();
        if (linageInfoItemProvider != null) linageInfoItemProvider.dispose();
        if (cobolfdIndexItemProvider != null) cobolfdIndexItemProvider.dispose();
        if (usageItemProvider != null) usageItemProvider.dispose();
    }

}
