<?xml version="1.0" encoding="UTF-8"?>
<dataquality.indicators.definition:IndicatorsDefinitions xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:dataquality.indicators.definition="http://dataquality.indicators.definition" xmi:id="_cb-g4BF2Ed2PKb6nEJEvhw" name="Talend's default indicators' definitions">
  <indicatorDefinitions xmi:id="_ccFOkBF2Ed2PKb6nEJEvhw" name="Row Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Row Count">
    <taggedValue xmi:id="_yboaoDh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of rows"/>
    <taggedValue xmi:id="_yboaoTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the number of records"/>
    <sqlGenericExpression xmi:id="_wmX5MGoAEd20k7biVpOSRw" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq0BF2Ed2PKb6nEJEvhw" name="Distinct Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Distinct Count">
    <taggedValue xmi:id="_ybpowDh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
    <taggedValue xmi:id="_ybqP0Dh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the number of distinct records"/>
    <sqlGenericExpression xmi:id="_ybqP0jh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq0RF2Ed2PKb6nEJEvhw" name="Unique Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Unique Count">
    <taggedValue xmi:id="_ybq24Dh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
    <taggedValue xmi:id="_ybq24Th8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the number of unique records"/>
    <sqlGenericExpression xmi:id="_ybq24jh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybq24zh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
    <sqlGenericExpression xmi:id="_v_vkMKafEd2vAre0A_m0Dg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
    <sqlGenericExpression xmi:id="_BsX1oMtNEd2CMtoJzSqU8Q" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
    <sqlGenericExpression xmi:id="_D9BAYBILEd6Zsu-w7oQdJw" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq0hF2Ed2PKb6nEJEvhw" name="Duplicate Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Duplicate Count">
    <taggedValue xmi:id="_ybrd8Dh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
    <taggedValue xmi:id="_ybrd8Th8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the number of duplicated records"/>
    <sqlGenericExpression xmi:id="_ybrd8jh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybrd8zh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
    <sqlGenericExpression xmi:id="_ybrd9Dh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
    <sqlGenericExpression xmi:id="_H3q6QMtNEd2CMtoJzSqU8Q" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
    <sqlGenericExpression xmi:id="_Oid8IBILEd6Zsu-w7oQdJw" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_YqcX0XHpEd6udst2R2sgpA" name="Functional Dependency" label="Functional Dependency">
    <taggedValue xmi:id="_Yqc-4HHpEd6udst2R2sgpA" tag="Description" value="Reports the extent to which the values in one column (the dependent column) depend on the values in another column or set of columns (the determinant column)"/>
    <taggedValue xmi:id="_Yqc-4XHpEd6udst2R2sgpA" tag="Purpose" value=""/>
    <sqlGenericExpression xmi:id="_Yqc-4nHpEd6udst2R2sgpA" body="SELECT COUNT(A) AS NB, COUNT(DISTINCT A) AS NBDISTINCT FROM (SELECT DISTINCT &lt;%=__COLUMN_NAME_A__%> AS A , &lt;%=__COLUMN_NAME_B__%> AS B FROM  &lt;%=__TABLE_NAME__%> C  &lt;%=__WHERE_CLAUSE__%>) T" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq0xF2Ed2PKb6nEJEvhw" name="Blank Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Blank Count">
    <taggedValue xmi:id="_ybsFADh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
    <taggedValue xmi:id="_ybsFATh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the number of blank records"/>
    <sqlGenericExpression xmi:id="_ybsFAzh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybsFBDh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_4Vq50GVjEd2wJomsB-uicA" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
    <sqlGenericExpression xmi:id="_RjJMMHLIEd29UNvGybxJUw" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq1BF2Ed2PKb6nEJEvhw" name="Minimal Length" categories="_ccKHERF2Ed2PKb6nEJEvhw" label="Minimal Length">
    <taggedValue xmi:id="_ybssEDh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the minimal length of a text field. Parameters can be set to avoid counting blank data or null data"/>
    <taggedValue xmi:id="_ybssETh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
    <sqlGenericExpression xmi:id="_ybssEzh8Ed2XmO7pl5Yuyg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybtTIDh8Ed2XmO7pl5Yuyg" body="SELECT MIN(LENGTH(TRIM('XX' || &lt;%=__COLUMN_NAMES__%>))) - LENGTH('XX') FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_Z3slMGe4Ed2m7a3evIL7Lg" body="SELECT MIN(DATALENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
    <sqlGenericExpression xmi:id="_Td74UGndEd2IVfUQFXDwvw" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
    <sqlGenericExpression xmi:id="_4Ly-sMqFEd2M_9ndxafJaQ" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccHq1RF2Ed2PKb6nEJEvhw" name="Maximal Length" categories="_ccKHERF2Ed2PKb6nEJEvhw" label="Maximal Length">
    <taggedValue xmi:id="_ybtTITh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the maximal length of a text field. Parameters can be set to avoid counting blank data or null data"/>
    <taggedValue xmi:id="_ybtTIjh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the length of the longest textual record"/>
    <sqlGenericExpression xmi:id="_ybt6MTh8Ed2XmO7pl5Yuyg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybt6Mjh8Ed2XmO7pl5Yuyg" body="SELECT MAX(LENGTH(TRIM('XX' || &lt;%=__COLUMN_NAMES__%>))) - LENGTH('XX') FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_frLmwGe4Ed2m7a3evIL7Lg" body="SELECT MAX(DATALENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
    <sqlGenericExpression xmi:id="_Wg8WUGndEd2IVfUQFXDwvw" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
    <sqlGenericExpression xmi:id="_A-pUYMqGEd2M_9ndxafJaQ" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccIR4BF2Ed2PKb6nEJEvhw" name="Average Length" categories="_ccKHERF2Ed2PKb6nEJEvhw" label="Average Length">
    <taggedValue xmi:id="_ybt6Mzh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the average length of the field. Parameters can be set to avoid counting blank data or null data"/>
    <taggedValue xmi:id="_ybuhQDh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the average length of the textual record"/>
    <sqlGenericExpression xmi:id="_ybuhQTh8Ed2XmO7pl5Yuyg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybuhQzh8Ed2XmO7pl5Yuyg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_kQeW4Ge4Ed2m7a3evIL7Lg" body="SELECT SUM(DATALENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
    <sqlGenericExpression xmi:id="_aPEN4GndEd2IVfUQFXDwvw" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
    <sqlGenericExpression xmi:id="_EK9fYMqGEd2M_9ndxafJaQ" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Ingres"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccIR4RF2Ed2PKb6nEJEvhw" name="Mode" categories="_ccKuIRF2Ed2PKb6nEJEvhw" label="Mode">
    <taggedValue xmi:id="_ybvIUDh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the mode (most probable value). For numerical data or continuous data, bins can be set in the parameters of this indicator. It is different from the average and from the median. Generalization of it is an histogram. It is good for addressing categorical attributes"/>
    <taggedValue xmi:id="_ybvIUTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the most frequent value"/>
    <sqlGenericExpression xmi:id="_ybvIUjh8Ed2XmO7pl5Yuyg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="SQL"/>
    <sqlGenericExpression xmi:id="_ybvIVDh8Ed2XmO7pl5Yuyg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="Oracle"/>
    <sqlGenericExpression xmi:id="_NI3bsJRmEd2PFJoogKUukg" body="SELECT  &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY COUNT(*) DESC " language="DB2"/>
    <sqlGenericExpression xmi:id="_Xn4ngKQ5Ed2C36cPvTLBDA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccIR4hF2Ed2PKb6nEJEvhw" name="Frequency Table" categories="_ccKuIRF2Ed2PKb6nEJEvhw" label="Frequency Table">
    <taggedValue xmi:id="_ybvvYDh8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of records for each distinct record"/>
    <taggedValue xmi:id="_ybvvYTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the most frequent records"/>
    <sqlGenericExpression xmi:id="_ybwWcDh8Ed2XmO7pl5Yuyg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybwWcTh8Ed2XmO7pl5Yuyg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_ybwWcjh8Ed2XmO7pl5Yuyg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_u4GDEEbNEd2QPKsejnYyXQ" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY COUNT(*) DESC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_C4G9kJRmEd2PFJoogKUukg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
    <sqlGenericExpression xmi:id="_RWPXYMtWEd2CMtoJzSqU8Q" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Teradata"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_-0C00JOtEd2Iyo0dtkB9pA" name="Low Frequency Table" categories="_ccKuIRF2Ed2PKb6nEJEvhw" label="Low Frequency Table">
    <taggedValue xmi:id="_Hhd38JOuEd2Iyo0dtkB9pA" tag="Description" value="counts the number of records for each distinct record"/>
    <taggedValue xmi:id="_Hhd38ZOuEd2Iyo0dtkB9pA" tag="Purpose" value="evaluates the less frequent records"/>
    <sqlGenericExpression xmi:id="_Ol0rgJOuEd2Iyo0dtkB9pA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="SQL"/>
    <sqlGenericExpression xmi:id="_Ol0rgZOuEd2Iyo0dtkB9pA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_Ol1SkJOuEd2Iyo0dtkB9pA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_Ol1SkZOuEd2Iyo0dtkB9pA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_FR8iwJRmEd2PFJoogKUukg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI48BF2Ed2PKb6nEJEvhw" name="Summary Statistics" categories="_ccKuIRF2Ed2PKb6nEJEvhw" aggregatedDefinitions="_ccI48xF2Ed2PKb6nEJEvhw _ccI48RF2Ed2PKb6nEJEvhw _ccI48hF2Ed2PKb6nEJEvhw _ccI49hF2Ed2PKb6nEJEvhw" label="Summary Statistics">
    <taggedValue xmi:id="_ybyLoDh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the average, the median and the extent of the data (range, interquartile range)"/>
    <taggedValue xmi:id="_ybyLoTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="give a simple overview of the distribution of the data"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI48RF2Ed2PKb6nEJEvhw" name="Mean" categories="_ccKuIBF2Ed2PKb6nEJEvhw" aggregatedDefinitions="_ccFOkBF2Ed2PKb6nEJEvhw _ccJgAhF2Ed2PKb6nEJEvhw" label="Mean">
    <taggedValue xmi:id="_ybzZwDh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the mean (average) of the records"/>
    <taggedValue xmi:id="_ybzZwTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the mean value of numerical records"/>
    <sqlGenericExpression xmi:id="_ybzZwjh8Ed2XmO7pl5Yuyg" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
    <sqlGenericExpression xmi:id="_ybzZwzh8Ed2XmO7pl5Yuyg" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="MySQL"/>
    <sqlGenericExpression xmi:id="_yb0A0Dh8Ed2XmO7pl5Yuyg" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_VO37sGOhEd2-SIyfZ_Vx6A" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_UjnhIIaJEd6N1ZHEYZ2keg" body="SELECT SUM(CAST (&lt;%=__COLUMN_NAMES__%> AS REAL)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI48hF2Ed2PKb6nEJEvhw" name="Median" categories="_ccKuIBF2Ed2PKb6nEJEvhw" label="Median">
    <taggedValue xmi:id="_yb0A0Th8Ed2XmO7pl5Yuyg" tag="Description" value="The median is the value separating the higher half of a sample, a population or a probability distribution from the lower half"/>
    <taggedValue xmi:id="_yb0n4Dh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the median of the records"/>
    <sqlGenericExpression xmi:id="_yb0n4Th8Ed2XmO7pl5Yuyg" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END)  +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) AND  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END)  + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
    <sqlGenericExpression xmi:id="_yb0n4jh8Ed2XmO7pl5Yuyg" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
    <sqlGenericExpression xmi:id="_yb0n4zh8Ed2XmO7pl5Yuyg" body="SELECT AVG(&lt;%=__COLUMN_NAMES__%>) FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) OVER( ) total, CAST(COUNT(*) OVER( ) AS DECIMAL)/2 mid, CEIL(CAST(COUNT(*) OVER( ) AS DECIMAL)/2) next, ROW_NUMBER() OVER ( ORDER BY &lt;%=__COLUMN_NAMES__%>) rn FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) x WHERE ( MOD(total,2) = 0&#x9; AND rn IN ( mid, mid+1 ) ) OR ( MOD(total,2) = 1 AND rn = next )" language="Oracle"/>
    <sqlGenericExpression xmi:id="_yb0n5Dh8Ed2XmO7pl5Yuyg" body="SELECT MEDIAN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle 10g"/>
    <sqlGenericExpression xmi:id="_yb0n5Th8Ed2XmO7pl5Yuyg" body=" SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle 9i"/>
    <sqlGenericExpression xmi:id="_n-8v0GI-Ed2QlOgtjAaunA" body="SELECT AVG(&lt;%=__COLUMN_NAMES__%>) FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) OVER( ) total, CAST(COUNT(*) OVER( ) AS DECIMAL)/2 mid, CEIL(CAST(COUNT(*) OVER( ) AS DECIMAL)/2) next, ROW_NUMBER() OVER ( ORDER BY &lt;%=__COLUMN_NAMES__%>) rn FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>) x WHERE ( MOD(total,2) = 0&#x9; AND rn IN ( mid, mid+1 ) ) OR ( MOD(total,2) = 1 AND rn = next )" language="DB2"/>
    <sqlGenericExpression xmi:id="_yBfLcGOhEd2-SIyfZ_Vx6A" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_qebsAaGiEd2ad6QSUasUIA" body="SELECT AVG(cast (&lt;%=__COLUMN_NAMES__%> AS NUMERIC)) FROM (SELECT distinct &lt;%=__COLUMN_NAMES__%> FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> ) STT WHERE (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>) &lt;= (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> ) AS SOU WHERE SOU.&lt;%=__COLUMN_NAMES__%> &lt;= STT.&lt;%=__COLUMN_NAMES__%>) AND (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>) &lt;= (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%>) AS SUR WHERE SUR.&lt;%=__COLUMN_NAMES__%> >= STT.&lt;%=__COLUMN_NAMES__%>) ) T" language="Adaptive Server Enterprise"/>
    <sqlGenericExpression xmi:id="_2kuWIKGnEd2ad6QSUasUIA" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI48xF2Ed2PKb6nEJEvhw" name="Inter Quartile Range" categories="_ccKuIBF2Ed2PKb6nEJEvhw" aggregatedDefinitions="_ccI49BF2Ed2PKb6nEJEvhw _ccI49RF2Ed2PKb6nEJEvhw" label="IQR">
    <taggedValue xmi:id="_yb2dEDh8Ed2XmO7pl5Yuyg" tag="Description" value="gives the spread of the main half data. This measure is more stable than the range"/>
    <taggedValue xmi:id="_yb2dETh8Ed2XmO7pl5Yuyg" tag="Purpose" value="measures the dispersion of the main half of the records"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI49BF2Ed2PKb6nEJEvhw" name="Lower Quartile" categories="_ccKuIBF2Ed2PKb6nEJEvhw" label="Lower Quartile">
    <taggedValue xmi:id="_yb3EIDh8Ed2XmO7pl5Yuyg" tag="Description" value="1/4th of the records are below this value and 3/4th are above"/>
    <taggedValue xmi:id="_yb3EITh8Ed2XmO7pl5Yuyg" tag="Purpose" value="indiquates the threshold of the lowest 1/4th records"/>
    <sqlGenericExpression xmi:id="_yb3EIzh8Ed2XmO7pl5Yuyg" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  3* SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) AND  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= 3*(SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
    <sqlGenericExpression xmi:id="_Hm93Ab2zEd2DqJI9O841-w" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
    <sqlGenericExpression xmi:id="_yb3EJDh8Ed2XmO7pl5Yuyg" body=" SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_2SZ8cGJAEd2vMMHSjRMsqA" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, ROW_NUMBER() OVER(ORDER BY &lt;%=__COLUMN_NAMES__%>) AS NUMBER FROM &lt;%=__TABLE_NAME__%> ) T1 WHERE ( NUMBER =  INTEGER((SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> ) /4) )" language="DB2"/>
    <sqlGenericExpression xmi:id="_NsBY0GOiEd2-SIyfZ_Vx6A" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_yOvpAKHWEd2d7N68szQ08Q" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR ORDER BY &lt;%=__COLUMN_NAMES__%> ASC " language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI49RF2Ed2PKb6nEJEvhw" name="Upper Quartile" categories="_ccKuIBF2Ed2PKb6nEJEvhw" label="Upper Quartile">
    <taggedValue xmi:id="_yb3rMDh8Ed2XmO7pl5Yuyg" tag="Description" value="1/4th of the records are above this value and 3/4th are below"/>
    <taggedValue xmi:id="_yb4SQDh8Ed2XmO7pl5Yuyg" tag="Purpose" value="indiquates the threshold of the highest 1/4th records"/>
    <sqlGenericExpression xmi:id="_S8lEYL2zEd2DqJI9O841-w" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= 3*( SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) ) AND 3 * SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)  &lt;= ( SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
    <sqlGenericExpression xmi:id="_yb4SQjh8Ed2XmO7pl5Yuyg" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
    <sqlGenericExpression xmi:id="_yb4SQzh8Ed2XmO7pl5Yuyg" body=" SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_P044MGJBEd2vMMHSjRMsqA" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, ROW_NUMBER() OVER(ORDER BY &lt;%=__COLUMN_NAMES__%>) AS NUMBER FROM &lt;%=__TABLE_NAME__%> ) T1 WHERE ( NUMBER =  3 * INTEGER((SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> ) /4) )" language="DB2"/>
    <sqlGenericExpression xmi:id="_S33yoGOiEd2-SIyfZ_Vx6A" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_y4H9MKHWEd2d7N68szQ08Q" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR ORDER BY &lt;%=__COLUMN_NAMES__%> ASC " language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccI49hF2Ed2PKb6nEJEvhw" name="Range" categories="_ccKuIBF2Ed2PKb6nEJEvhw" aggregatedDefinitions="_ccJgABF2Ed2PKb6nEJEvhw _ccJgARF2Ed2PKb6nEJEvhw" label="Range">
    <taggedValue xmi:id="_yb6HcDh8Ed2XmO7pl5Yuyg" tag="Description" value="is the difference between the highest record and the lowest record"/>
    <taggedValue xmi:id="_yb6HcTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="measures the extent of the records"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccJgABF2Ed2PKb6nEJEvhw" name="Minimum" categories="_ccKuIBF2Ed2PKb6nEJEvhw" label="Minimum">
    <taggedValue xmi:id="_yb6ugDh8Ed2XmO7pl5Yuyg" tag="Description" value="gives the minimal record"/>
    <taggedValue xmi:id="_yb6ugTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the minimal record"/>
    <sqlGenericExpression xmi:id="_yb6ugjh8Ed2XmO7pl5Yuyg" body="SELECT MIN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccJgARF2Ed2PKb6nEJEvhw" name="Maximum" categories="_ccKuIBF2Ed2PKb6nEJEvhw" label="Maximum">
    <taggedValue xmi:id="_yb78oDh8Ed2XmO7pl5Yuyg" tag="Description" value="gives the maximal record"/>
    <taggedValue xmi:id="_yb78oTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluates the maximal record"/>
    <sqlGenericExpression xmi:id="_yb78ojh8Ed2XmO7pl5Yuyg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_ccJgAhF2Ed2PKb6nEJEvhw" name="Sum" label="Sum">
    <taggedValue xmi:id="_yb8jsDh8Ed2XmO7pl5Yuyg" tag="Description" value="sums all the records"/>
    <taggedValue xmi:id="_yb8jsTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate the sum of the records"/>
    <sqlGenericExpression xmi:id="_yb8jsjh8Ed2XmO7pl5Yuyg" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_yb9x0zh8Ed2XmO7pl5Yuyg" name="Text Statistics" aggregatedDefinitions="_ccIR4BF2Ed2PKb6nEJEvhw _ccHq1RF2Ed2PKb6nEJEvhw _ccHq1BF2Ed2PKb6nEJEvhw" label="Text Statistics">
    <taggedValue xmi:id="_yb9x1Dh8Ed2XmO7pl5Yuyg" tag="Purpose" value="analyze textual fields"/>
    <taggedValue xmi:id="_yb9x1Th8Ed2XmO7pl5Yuyg" tag="Description" value="contain indicators for analyzing textual fields"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_yb-Y4Dh8Ed2XmO7pl5Yuyg" name="Simple Statistics" aggregatedDefinitions="_ccHq0xF2Ed2PKb6nEJEvhw _ccHq0BF2Ed2PKb6nEJEvhw _ccHq0hF2Ed2PKb6nEJEvhw _ccHq0RF2Ed2PKb6nEJEvhw _GrAeADh9Ed2XmO7pl5Yuyg" label="Simple Statistics">
    <taggedValue xmi:id="_yb-Y4Th8Ed2XmO7pl5Yuyg" tag="Description" value="contain several count indicators"/>
    <taggedValue xmi:id="_yb-Y4jh8Ed2XmO7pl5Yuyg" tag="Purpose" value="analyze the quantity of records"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_yb-_8Dh8Ed2XmO7pl5Yuyg" name="Regular Expression Matching" categories="_tJjIwIDEEd2nDvn5vy_C5A" label="Regular Expression Matching">
    <taggedValue xmi:id="_yb-_8Th8Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of records matching the given pattern against the number of records that do not match the given pattern"/>
    <taggedValue xmi:id="_yb-_8jh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate the number of records that match a regular pattern"/>
    <sqlGenericExpression xmi:id="_yb_nATh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(CASE WHEN &lt;%=__COLUMN_NAMES__%> REGEXP &lt;%=__PATTERN_EXPR__%> THEN 1 END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="MySQL"/>
    <sqlGenericExpression xmi:id="_yb_nAjh8Ed2XmO7pl5Yuyg" body="SELECT COUNT(CASE WHEN REGEXP_LIKE(&lt;%=__COLUMN_NAMES__%>,&lt;%=__PATTERN_EXPR__%>) THEN 1 END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
    <sqlGenericExpression xmi:id="_XXDn0GOvEd2-SIyfZ_Vx6A" body="SELECT COUNT(CASE WHEN &lt;%=__COLUMN_NAMES__%> ~ &lt;%=__PATTERN_EXPR__%> THEN 1 END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_Z4vXcERgEd2RSqFSgXiIfA" name="SQL Pattern Matching" categories="_tJjIwIDEEd2nDvn5vy_C5A" label="SQL Pattern Matching">
    <taggedValue xmi:id="_hzXEoERgEd2RSqFSgXiIfA" tag="Description" value="counts the number of records matching the given SQL pattern against the number of records that do not match the given SQL pattern"/>
    <taggedValue xmi:id="_hzXEoURgEd2RSqFSgXiIfA" tag="Purpose" value="evaluate the number of records that match a SQL pattern (entering in LIKE clause)"/>
    <sqlGenericExpression xmi:id="_vIt8MERgEd2RSqFSgXiIfA" body="SELECT COUNT(CASE WHEN &lt;%=__COLUMN_NAMES__%> LIKE &lt;%=__PATTERN_EXPR__%> THEN 1 END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_GrAeADh9Ed2XmO7pl5Yuyg" name="Null Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Null Count">
    <taggedValue xmi:id="_GrBFEDh9Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
    <taggedValue xmi:id="_GrBFETh9Ed2XmO7pl5Yuyg" tag="Description" value="counts the number of null rows"/>
    <sqlGenericExpression xmi:id="_GrBFEjh9Ed2XmO7pl5Yuyg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_jMh4gJE3Ed2HGNmGoaS-_w" name="Row Comparison" categories="_as5yEJOuEd2Iyo0dtkB9pA" label="Row Comparison">
    <taggedValue xmi:id="_l9ZdoJE3Ed2HGNmGoaS-_w" tag="Purpose" value="Compare content of two column sets"/>
    <taggedValue xmi:id="_txkkkJE3Ed2HGNmGoaS-_w" tag="Description" value="Counts the number of data from a column set A that match data of a column set B"/>
    <sqlGenericExpression xmi:id="_4xpm0JE3Ed2HGNmGoaS-_w" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> LEFT JOIN &lt;%=__TABLE_NAME_2__%> ON (&lt;%=__JOIN_CLAUSE__%>) WHERE (&lt;%=__WHERE_CLAUSE__%>)" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_nZEo8MYSEd27NP4lvE0A4w" name="Connection Overview" categories="_wQj8IMYUEd27NP4lvE0A4w" aggregatedDefinitions="_QwDiwMYUEd27NP4lvE0A4w" label="Connection Overview">
    <taggedValue xmi:id="_FqBpgMYUEd27NP4lvE0A4w" tag="Purpose" value="Give an overview of the content of a connection"/>
    <taggedValue xmi:id="_FqBpgcYUEd27NP4lvE0A4w" tag="Description" value="Counts the number of rows, tables, catalogs, schemas..."/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_QwDiwMYUEd27NP4lvE0A4w" name="Catalog Overview" categories="_wQj8IMYUEd27NP4lvE0A4w" aggregatedDefinitions="_V4SA0MYUEd27NP4lvE0A4w _hgO7YMYUEd27NP4lvE0A4w" label="Catalog Overview">
    <taggedValue xmi:id="_UH4aMMYUEd27NP4lvE0A4w" tag="Purpose" value="Give an overview of the content of a catalog"/>
    <taggedValue xmi:id="_UH4aMcYUEd27NP4lvE0A4w" tag="Description" value="Counts the number of rows, tables, schemas..."/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_V4SA0MYUEd27NP4lvE0A4w" name="Schema Overview" categories="_wQj8IMYUEd27NP4lvE0A4w" aggregatedDefinitions="_hgO7YMYUEd27NP4lvE0A4w" label="Schema Overview">
    <taggedValue xmi:id="_YLSlQMYUEd27NP4lvE0A4w" tag="Purpose" value="Give an overview of the content of a schema"/>
    <taggedValue xmi:id="_YLSlQcYUEd27NP4lvE0A4w" tag="Description" value="Counts the number of rows, tables..."/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_hgO7YMYUEd27NP4lvE0A4w" name="Table Overview" categories="_wQj8IMYUEd27NP4lvE0A4w" label="Table Overview">
    <taggedValue xmi:id="_kRtkgMYUEd27NP4lvE0A4w" tag="Purpose" value="Give an overview of the content of a table"/>
    <taggedValue xmi:id="_kRtkgcYUEd27NP4lvE0A4w" tag="Description" value="Counts the number of rows, primary keys, indices..."/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_kQzTsJR-Ed2XO-JvLwVAwg" name="Pattern Frequency Table" categories="_0n3BsJR-Ed2XO-JvLwVAwg" label="Pattern Frequency Table">
    <taggedValue xmi:id="_kQz6wJR-Ed2XO-JvLwVAwg" tag="Description" value="counts the number of records for each distinct pattern"/>
    <taggedValue xmi:id="_kQz6wZR-Ed2XO-JvLwVAwg" tag="Purpose" value="evaluates the most frequent patterns"/>
    <sqlGenericExpression xmi:id="_kQz6w5R-Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_kQz6xJR-Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_kQz6xZR-Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_kQz6xpR-Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c DESC" language="DB2"/>
    <sqlGenericExpression xmi:id="_M26GwJUbEd2dPK5T9pO-YA" body="SELECT &lt;%=__COLUMN_NAMES__%> , COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c DESC" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_OCTbwJR_Ed2XO-JvLwVAwg" name="Pattern Low Frequency Table" categories="_ccKuIRF2Ed2PKb6nEJEvhw" label="Pattern Low Frequency Table">
    <taggedValue xmi:id="_OCTbwZR_Ed2XO-JvLwVAwg" tag="Description" value="counts the number of patterns for each distinct pattern"/>
    <taggedValue xmi:id="_OCTbwpR_Ed2XO-JvLwVAwg" tag="Purpose" value="evaluates the less frequent patterns"/>
    <sqlGenericExpression xmi:id="_OCTbxJR_Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_OCTbxZR_Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_OCTbxpR_Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) AS c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_OCTbx5R_Ed2XO-JvLwVAwg" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> ORDER BY c ASC" language="DB2"/>
    <sqlGenericExpression xmi:id="_UHAQQZUbEd2dPK5T9pO-YA" body="SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) c FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%> ORDER BY c ASC" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_10gx4JxcEd2YicTszQEJLA" name="Multiple Column Frequency Table" label="Multiple Column Frequency Table">
    <taggedValue xmi:id="_ByME0JxdEd2YicTszQEJLA" tag="Description" value="Computes a frequency table on several columns with aggregate functions when needed"/>
    <taggedValue xmi:id="_ByME0ZxdEd2YicTszQEJLA" tag="Purpose" value="evaluates frequencies of values on several columns"/>
    <sqlGenericExpression xmi:id="_2CtwgJxdEd2YicTszQEJLA" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_9GKxAamWEd2LEfr3zBgTzA" name="Averaged Multiple Column Frequency Table" categories="_-DfJgLrcEd2PGrJOyhNk-w" label="Averaged Multiple Column Frequency Table">
    <taggedValue xmi:id="_9GKxAqmWEd2LEfr3zBgTzA" tag="Description" value="Computes a frequency table on several columns with aggregate functions when needed"/>
    <taggedValue xmi:id="_9GKxA6mWEd2LEfr3zBgTzA" tag="Purpose" value="evaluates frequencies of values on several columns"/>
    <sqlGenericExpression xmi:id="_9GKxBKmWEd2LEfr3zBgTzA" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%>" language="SQL"/>
    <aggregate1argFunctions xmi:id="_O1k0MKmmEd2O27sR3bvpzw" body="AVG({0});COUNT({0});SUM(CASE WHEN {0} IS NULL THEN 1 ELSE 0 END)" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_yCHCULrcEd2PGrJOyhNk-w" name="Min Max Date Multiple Column Frequency Table" categories="_-DfJgLrcEd2PGrJOyhNk-w" label="Min Max Date Multiple Column Frequency Table">
    <taggedValue xmi:id="_yCHCUbrcEd2PGrJOyhNk-w" tag="Description" value="Computes a frequency table on several columns with aggregate functions when needed"/>
    <taggedValue xmi:id="_yCHCUrrcEd2PGrJOyhNk-w" tag="Purpose" value="evaluates frequencies of values on several columns"/>
    <sqlGenericExpression xmi:id="_yCHCU7rcEd2PGrJOyhNk-w" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%>" language="SQL"/>
    <date1argFunctions xmi:id="_3CkEMMBdEd2OKqiaTD0zvg" body="MIN({0});MAX({0});COUNT({0});SUM(CASE WHEN {0} IS NULL THEN 1 ELSE 0 END)" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_lNIE0MbNEd2d_JPxxDRSfQ" name="View Overview" categories="_wQj8IMYUEd27NP4lvE0A4w" label="View Overview">
    <taggedValue xmi:id="_lNIE0cbNEd2d_JPxxDRSfQ" tag="Purpose" value="Give an overview of the content of a view"/>
    <taggedValue xmi:id="_lNIE0sbNEd2d_JPxxDRSfQ" tag="Description" value="Counts the number of rows..."/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_xnOs8O1MEd2L4a5zyMnylw" name="Default Value Count" categories="_ccKHEBF2Ed2PKb6nEJEvhw" label="Default Value Count">
    <taggedValue xmi:id="_xnOs8e1MEd2L4a5zyMnylw" tag="Description" value="counts the number of rows that are equal to the default value of the column"/>
    <taggedValue xmi:id="_xnOs8u1MEd2L4a5zyMnylw" tag="Purpose" value="evaluates the number of default values"/>
    <sqlGenericExpression xmi:id="_xnOs8-1MEd2L4a5zyMnylw" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_VGep4Pa7Ed24-N3PsP_o-w" name="Soundex Frequency Table" categories="_entEUPbCEd298st2mPm9SA" label="Soundex Frequency Table">
    <taggedValue xmi:id="_VGfQ8Pa7Ed24-N3PsP_o-w" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
    <taggedValue xmi:id="_VGfQ8fa7Ed24-N3PsP_o-w" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
    <sqlGenericExpression xmi:id="_VGfQ8_a7Ed24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c DESC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_VGfQ9Pa7Ed24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c DESC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_VGfQ9fa7Ed24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) , COUNT(*) DESC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_VGfQ9va7Ed24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c DESC" language="DB2"/>
    <sqlGenericExpression xmi:id="_VGfQ9_a7Ed24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c DESC" language="Teradata"/>
    <sqlGenericExpression xmi:id="_qqWBsPbAEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c DESC" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_AjKIEPbBEd24-N3PsP_o-w" name="Soundex Low Frequency Table" categories="_entEUPbCEd298st2mPm9SA" label="Soundex Low Frequency Table">
    <taggedValue xmi:id="_AjKIEfbBEd24-N3PsP_o-w" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
    <taggedValue xmi:id="_AjKIEvbBEd24-N3PsP_o-w" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
    <sqlGenericExpression xmi:id="_AjKIE_bBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
    <sqlGenericExpression xmi:id="_AjKIFPbBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
    <sqlGenericExpression xmi:id="_AjKIFfbBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
    <sqlGenericExpression xmi:id="_AjKIFvbBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
    <sqlGenericExpression xmi:id="_AjKIF_bBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
    <sqlGenericExpression xmi:id="_AjKIGPbBEd24-N3PsP_o-w" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_vf0k4PkbEd2z55b7dTkWFw" name="Multiple Column Correlation" label="Multiple Column Correlation">
    <taggedValue xmi:id="_vf0k4fkbEd2z55b7dTkWFw" tag="Description" value="Computes a frequency table on several nominal columns"/>
    <taggedValue xmi:id="_vf0k4vkbEd2z55b7dTkWFw" tag="Purpose" value="evaluates frequencies of values on several columns"/>
    <sqlGenericExpression xmi:id="_vf0k4_kbEd2z55b7dTkWFw" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__GROUP_BY_ALIAS__%>" language="SQL"/>
  </indicatorDefinitions>
  <indicatorDefinitions xmi:id="_UUIyoCOMEd6YB57jaCfKaA" name="DQ Rule" label="DQ Rule">
    <taggedValue xmi:id="_lwpFwCOMEd6YB57jaCfKaA" tag="Description" value="Computes the number of records matching the DQ Rule"/>
    <taggedValue xmi:id="_r4i4ICOMEd6YB57jaCfKaA" tag="Purpose" value="estimates the number of record matching the rule"/>
    <sqlGenericExpression xmi:id="_axQAACOMEd6YB57jaCfKaA" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__JOIN_CLAUSE__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
  </indicatorDefinitions>
  <categories xmi:id="_ccKHEBF2Ed2PKb6nEJEvhw" name="Simple Statistics" label="Simple Statistics">
    <taggedValue xmi:id="_ycAOEDh8Ed2XmO7pl5Yuyg" tag="Description" value="do some simple statistics by several counting methods"/>
    <taggedValue xmi:id="_ycA1IDh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate different numbers of records"/>
  </categories>
  <categories xmi:id="_tJjIwIDEEd2nDvn5vy_C5A" name="Pattern Matching" label="Pattern Matching">
    <taggedValue xmi:id="_zuOWsIDEEd2nDvn5vy_C5A" tag="Description" value="contains indicators for pattern matching"/>
    <taggedValue xmi:id="_zuOWsYDEEd2nDvn5vy_C5A" tag="Purpose" value="evaluate the number of data matching a pattern (regular expression or SQL like expression) "/>
  </categories>
  <categories xmi:id="_BvUq8ERhEd2RSqFSgXiIfA" name="Quality" label="Quality">
    <taggedValue xmi:id="_II4OAERhEd2RSqFSgXiIfA" tag="Description" value="contains quality indicators"/>
    <taggedValue xmi:id="_II4OAURhEd2RSqFSgXiIfA" tag="Purpose" value="evaluate the quality of the data"/>
  </categories>
  <categories xmi:id="_ccKHERF2Ed2PKb6nEJEvhw" name="Text Statistics" label="Text Statistics">
    <taggedValue xmi:id="_ycA1ITh8Ed2XmO7pl5Yuyg" tag="Description" value="computes the length of the records"/>
    <taggedValue xmi:id="_ycA1Ijh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate the kind of textual records"/>
  </categories>
  <categories xmi:id="_ccKuIBF2Ed2PKb6nEJEvhw" name="Summary Statistics" label="Summary Statistics">
    <taggedValue xmi:id="_ycA1Izh8Ed2XmO7pl5Yuyg" tag="Description" value="compute the average, the median and the extent of the data (range, interquartile range)"/>
    <taggedValue xmi:id="_ycA1JDh8Ed2XmO7pl5Yuyg" tag="Purpose" value="give a simple overview of the distribution of the data"/>
  </categories>
  <categories xmi:id="_ccKuIRF2Ed2PKb6nEJEvhw" name="Advanced Statistics" label="Advanced Statistics">
    <taggedValue xmi:id="_ycBcMDh8Ed2XmO7pl5Yuyg" tag="Description" value="some advanced statistics"/>
    <taggedValue xmi:id="_ycBcMTh8Ed2XmO7pl5Yuyg" tag="Purpose" value="Advanced Statistics"/>
  </categories>
  <categories xmi:id="_as5yEJOuEd2Iyo0dtkB9pA" name="Row Comparison" label="Row Comparison">
    <taggedValue xmi:id="_cZDx4JOuEd2Iyo0dtkB9pA" tag="Description" value="Counts the number of records identical to a set of records"/>
    <taggedValue xmi:id="_cZDx4ZOuEd2Iyo0dtkB9pA" tag="Purpose" value="Compare rows of data"/>
  </categories>
  <categories xmi:id="_ccKuIhF2Ed2PKb6nEJEvhw" name="Mode" label="Mode">
    <taggedValue xmi:id="_ycBcMjh8Ed2XmO7pl5Yuyg" tag="Description" value="Mode"/>
    <taggedValue xmi:id="_ycBcMzh8Ed2XmO7pl5Yuyg" tag="Purpose" value="Mode"/>
  </categories>
  <categories xmi:id="_ccKuIxF2Ed2PKb6nEJEvhw" name="Frequency" label="Frequency">
    <taggedValue xmi:id="_ycBcNDh8Ed2XmO7pl5Yuyg" tag="Description" value="for each distinct record, counts the number of records."/>
    <taggedValue xmi:id="_ycCDQDh8Ed2XmO7pl5Yuyg" tag="Purpose" value="evaluate the most frequent records"/>
  </categories>
  <categories xmi:id="_entEUPbCEd298st2mPm9SA" name="Soundex" label="Soundex">
    <taggedValue xmi:id="_jXDvYPbCEd298st2mPm9SA" tag="Purpose" value="use Soundex algorithm to analyze data"/>
    <taggedValue xmi:id="_sYi-APbCEd298st2mPm9SA" tag="Description" value="uses SOUNDEX algorithm provided by database in the indicator"/>
  </categories>
  <categories xmi:id="_0n3BsJR-Ed2XO-JvLwVAwg" name="Pattern Finder" label="Pattern Finder">
    <taggedValue xmi:id="_3MEq4JR-Ed2XO-JvLwVAwg" tag="Description" value="for each distinct pattern, counts the number of patterns."/>
    <taggedValue xmi:id="_3MEq4ZR-Ed2XO-JvLwVAwg" tag="Purpose" value="evaluate the frequencies of patterns"/>
  </categories>
  <categories xmi:id="_ccKuJBF2Ed2PKb6nEJEvhw" name="Count" label="Count">
    <taggedValue xmi:id="_ycCDQTh8Ed2XmO7pl5Yuyg" tag="Description" value="contains several count indicators"/>
    <taggedValue xmi:id="_ycCDQjh8Ed2XmO7pl5Yuyg" tag="Purpose" value="analyze the quantity of records"/>
  </categories>
  <categories xmi:id="_-DfJgLrcEd2PGrJOyhNk-w" name="Correlation" label="Correlation">
    <taggedValue xmi:id="_J0OgABI6Ed6TWL6NwMMHzQ" tag="Description" value="contains correlation indicators"/>
    <taggedValue xmi:id="_POABEBI6Ed6TWL6NwMMHzQ" tag="Purpose" value="analyze the correlations"/>
  </categories>
  <categories xmi:id="_wQj8IMYUEd27NP4lvE0A4w" name="Overview" label="Overview">
    <taggedValue xmi:id="_Tz5OIBI6Ed6TWL6NwMMHzQ" tag="Description" value="contains overview indicators"/>
    <taggedValue xmi:id="_Wu94IBI6Ed6TWL6NwMMHzQ" tag="Purpose" value="give an overview of the connections, catalogs, schemas..."/>
  </categories>
  <categories xmi:id="_8i9eQBI5Ed6TWL6NwMMHzQ" name="DQ Rule" label="DQ Rule">
    <taggedValue xmi:id="_ghhXUBI6Ed6TWL6NwMMHzQ" tag="Description" value="contains user defined DQ rules in SQL"/>
    <taggedValue xmi:id="_kkFN0BI6Ed6TWL6NwMMHzQ" tag="Purpose" value="evaluates number of records for the given rules"/>
  </categories>
  <categories xmi:id="_b5F7QHqTEd67hM2eKD3QgQ" name="User Defined Count" label="User Defined Count">
    <taggedValue xmi:id="_chxE0HqTEd67hM2eKD3QgQ" tag="Description" value="contains user defined count indicators"/>
    <taggedValue xmi:id="_iPcZUHqTEd67hM2eKD3QgQ" tag="Purpose" value="analyze the quantity of records"/>
  </categories>
  <categories xmi:id="_Ba7OYXsXEd63r-VLO3_0OQ" name="User Defined Match" label="User Defined Match">
    <taggedValue xmi:id="_C-wYoHsXEd63r-VLO3_0OQ" tag="Description" value="contains user defined indicators for pattern matching"/>
    <taggedValue xmi:id="_Ddm30HsXEd63r-VLO3_0OQ" tag="Purpose" value="evaluate the number of data matching a pattern (regular expression or SQL like expression) "/>
  </categories>
  <categories xmi:id="_Frd2gHsXEd63r-VLO3_0OQ" name="User Defined Frequency" label="User Defined Frequency">
    <taggedValue xmi:id="_GzSaMHsXEd63r-VLO3_0OQ" tag="Description" value="user defined indicators for each distinct record, counts the number of records."/>
    <taggedValue xmi:id="_H4bdUHsXEd63r-VLO3_0OQ" tag="Purpose" value="evaluate the most frequent records"/>
  </categories>
  <categories xmi:id="_yQJQ0HsXEd63r-VLO3_0OQ" name="User Defined Comparison" label="User Defined Comparison">
    <taggedValue xmi:id="_zQEcwHsXEd63r-VLO3_0OQ" tag="Description" value="counts the number of records identical to a set of records"/>
    <taggedValue xmi:id="_0Vga0HsXEd63r-VLO3_0OQ" tag="Purpose" value="compare rows of data"/>
  </categories>
  <categories xmi:id="_1mapEHsXEd63r-VLO3_0OQ" name="User Defined Nominal Correlation" label="User Defined Nominal Correlation">
    <taggedValue xmi:id="_2lKJQHsXEd63r-VLO3_0OQ" tag="Description" value="contains user defined nominal correlation indicators"/>
    <taggedValue xmi:id="_3i_qgHsXEd63r-VLO3_0OQ" tag="Purpose" value="analyze the nominal correlations"/>
  </categories>
  <categories xmi:id="_6giZsHsXEd63r-VLO3_0OQ" name="User Defined Interval Correlation" label="User Defined Interval Correlation">
    <taggedValue xmi:id="_71xHQHsXEd63r-VLO3_0OQ" tag="Description" value="contains user defined interval correlation indicators"/>
    <taggedValue xmi:id="_8lTt0HsXEd63r-VLO3_0OQ" tag="Purpose" value="analyze the interval correlations"/>
  </categories>
  <categories xmi:id="_-fpTkHsXEd63r-VLO3_0OQ" name="User Defined Time Correlation" label="User Defined Time Correlation">
    <taggedValue xmi:id="__dyW0HsXEd63r-VLO3_0OQ" tag="Description" value="contains user defined time correlation indicators"/>
    <taggedValue xmi:id="_A0qDIHsYEd63r-VLO3_0OQ" tag="Purpose" value="analyze the time correlations"/>
  </categories>
</dataquality.indicators.definition:IndicatorsDefinitions>
